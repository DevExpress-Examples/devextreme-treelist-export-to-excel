@using ASP_NET_Core.Models

<h2>Home</h2>

@(
Html.DevExtreme().TreeList<ASP.NET_Core.Models.Employee>()
    .ID("employees")
    .DataSource(ds => ds.Mvc()
        .Controller("Employees")
        .LoadAction("Get")
        .Key("ID")
    )
    .RootValue(0)
    .ParentIdExpr("HeadID")
    .Columns(columns =>
    {
        columns.AddFor(m => m.Title)
            .Caption("Position");

        columns.AddFor(m => m.FullName);
        columns.AddFor(m => m.City);
        columns.AddFor(m => m.State);
        columns.AddFor(m => m.MobilePhone);
        columns.AddFor(m => m.FullName);


        columns.AddFor(m => m.HireDate)
            .DataType(GridColumnDataType.Date);
    })
    .ShowRowLines(true)
    .ShowBorders(true)
    .ColumnAutoWidth(true)
    .ExpandedRowKeys(new[] { 1 })
    .Toolbar(toolbar =>
    {
        toolbar.Items(items =>
        {
            items.Add().Name("exportToXlsx")
                .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                .Widget(w => w.Button()
                    .Icon("xlsxfile")
                    .OnClick("exportToExcel")
                );
        });
    })
)

<script>
    function exportToExcel() {
        const workbook = new ExcelJS.Workbook();
        const worksheet = workbook.addWorksheet('Employees');
        const component = $('#employees').dxTreeList('instance');

        exportTreeList({
            component, 
            worksheet
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Employees.xlsx');
            });
        })
    }
</script>
